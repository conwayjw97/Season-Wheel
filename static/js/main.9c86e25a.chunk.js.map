{"version":3,"sources":["components/canvas/utils/colourHelpers.js","components/canvas/utils/datetimeHelpers.js","components/canvas/utils/quadrantHelpers.js","components/canvas/utils/textHelpers.js","components/canvas/rendering/Drawer.js","components/canvas/Canvas.js","components/settings/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["black","white","grey","springGreen","summerYellow","autumnBrown","winterBlue","monthColours","seasonColours","monthNames","getDaysInYear","year","isLeapYear","getDayOfYear","day","month","Math","floor","Date","isInFirstQuadrant","radians","PI","isInSecondQuadrant","isInThirdQuadrant","isInFourthQuadrant","isInTopQuadrants","isInBottomQuadrants","isInRightQuadrants","isInLeftQuadrants","textAlignCentered","ctx","textAlign","textBaseline","textAlignOutwards","Quadrant","Draw","this","centreX","window","innerWidth","centreY","innerHeight","radius","startRadians","clearRect","date","dateString","compDisabled","compDay","compMonth","Text","font","fillStyle","Colour","fillText","beginPath","arc","closePath","fill","equinoxSolsticeDates","eqsol","marchEquinox","jd_data","juneSolstice","septemberEquinox","decemberSolstice","DateTime","daysInYear","startDate","length","dayOfYear","getDate","getMonth","getFullYear","previousRadians","lineWidth","strokeStyle","dateMeanings","i","dateRadians","moveTo","lineTo","stroke","lineEndX","cos","lineEndY","sin","daysInMonth","stepSize","textOffset","centreRadians","textX","textY","dayStep","dayLineLen","lineStartX","lineStartY","relativeDayOfYear","ceil","globalAlpha","yearPercentage","round","compDayOfYear","relativeCompDayOfYear","compDateRadians","compYearPercentage","totalDays","totalWeeks","totalMonths","Canvas","props","canvas","useRef","width","height","drawer","a","timer","ms","Promise","res","setTimeout","alpha","delta","resetCanvas","clear","drawDate","seasons","drawAstroSeasonSections","drawMeteoSeasonSections","drawWhiteCircle","drawMonthSections","drawDayLines","drawDateLine","drawComparisonAnalysis","useEffect","scriptsLoaded","current","getContext","Drawer","fadeIn","updateCount","ref","className","Settings","useState","showing","setShowing","handleButtonClick","event","style","bottom","left","onClick","id","type","value","onChange","handleDateChange","checked","disabled","season","handleSeasonsChange","handleSave","position","right","top","href","initialDate","dateReducer","state","action","elementId","nativeEvent","srcElement","newValue","parseInt","target","App","useReducer","dateState","dateDispatch","seasonsState","setSeasonsState","setUpdateCount","setScriptsLoaded","waitForScripts","src","process","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c86e25a.chunk.js","sourcesContent":["export const black = \"rgb(0, 0, 0)\";\r\nexport const white = \"rgb(255, 255, 255)\";\r\nexport const red = \"rgb(255, 0, 0)\";\r\nexport const grey = \"rgb(150, 150, 150)\";\r\nexport const lightGrey = \"rgb(200, 200, 200)\";\r\n\r\nexport const transparent = \"rgba(255, 255, 255, 0)\";\r\nexport const transparentBlack = \"rgba(0, 0, 0, 0.35)\";\r\n\r\nconst springGreen = \"rgba(0, 220, 0, 1)\";\r\nconst summerYellow = \"rgba(230, 230, 0, 1)\";\r\nconst autumnBrown = \"rgba(255, 127, 0, 1)\";\r\nconst winterBlue = \"rgba(0, 175, 255, 1)\";\r\n\r\nexport const monthColours = [\r\n  winterBlue, winterBlue, springGreen, springGreen, springGreen, summerYellow,\r\n  summerYellow, summerYellow, autumnBrown, autumnBrown, autumnBrown, winterBlue\r\n];\r\n\r\nexport const seasonColours = [\r\n  winterBlue, springGreen, summerYellow, autumnBrown, winterBlue\r\n];\r\n","export const monthNames = [\r\n  \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\",\r\n  \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nexport function isLeapYear(year){\r\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\r\n}\r\n\r\nexport function getDaysInYear(year){\r\n  return isLeapYear(year) ? 366 : 365;\r\n}\r\n\r\nexport function getDayOfYear(day, month, year){\r\n  return Math.floor((new Date(year, month-1, day) - new Date(year, 0, 0)) / 1000 / 60 / 60 / 24);\r\n}\r\n\r\nexport function getEquinoxSolsticeDates(year){\r\n  const eqsol = window.eqsol(year);\r\n  const marchEquinox = window.jd_data(eqsol[0]);\r\n  const juneSolstice = window.jd_data(eqsol[1]);\r\n  const septemberEquinox = window.jd_data(eqsol[2]);\r\n  const decemberSolstice = window.jd_data(eqsol[3]);\r\n\r\n  return [\r\n    new Date(year, marchEquinox[1]-1, Math.floor(marchEquinox[0])),\r\n    new Date(year, juneSolstice[1]-1, Math.floor(juneSolstice[0])),\r\n    new Date(year, septemberEquinox[1]-1, Math.floor(septemberEquinox[0])),\r\n    new Date(year, decemberSolstice[1]-1, Math.floor(decemberSolstice[0]))\r\n  ];\r\n}\r\n","export function isInFirstQuadrant(radians){\r\n  return radians <= (Math.PI / 2) && radians >= 0;\r\n}\r\n\r\nexport function isInSecondQuadrant(radians){\r\n  return radians < 0 && radians >= -(Math.PI / 2);\r\n}\r\n\r\nexport function isInThirdQuadrant(radians){\r\n  return radians < -(Math.PI / 2) && radians >= -Math.PI;\r\n}\r\n\r\nexport function isInFourthQuadrant(radians){\r\n  return radians < -Math.PI && radians >= -(3*Math.PI)/2;\r\n}\r\n\r\nexport function isInTopQuadrants(radians){\r\n  return isInFirstQuadrant(radians) || isInFourthQuadrant(radians);\r\n}\r\n\r\nexport function isInBottomQuadrants(radians){\r\n  return isInSecondQuadrant(radians) || isInThirdQuadrant(radians);\r\n}\r\n\r\nexport function isInRightQuadrants(radians){\r\n  return isInFirstQuadrant(radians) || isInSecondQuadrant(radians);\r\n}\r\n\r\nexport function isInLeftQuadrants(radians){\r\n  return isInThirdQuadrant(radians) || isInFourthQuadrant(radians);\r\n}\r\n","import * as Quadrant from \"./quadrantHelpers.js\";\r\n\r\nexport function textAlignCentered(ctx){\r\n  ctx.textAlign = \"center\";\r\n  ctx.textBaseline = \"middle\";\r\n}\r\n\r\nexport function textAlignOutwards(ctx, radians){\r\n  if(Quadrant.isInRightQuadrants(radians)){\r\n    ctx.textAlign = \"start\";\r\n  }\r\n  if(Quadrant.isInLeftQuadrants(radians)){\r\n    ctx.textAlign = \"end\";\r\n  }\r\n  if(Quadrant.isInTopQuadrants(radians)){\r\n    ctx.textBaseline = \"bottom\";\r\n  }\r\n  if(Quadrant.isInBottomQuadrants(radians)){\r\n    ctx.textBaseline = \"top\";\r\n  }\r\n}\r\n\r\nexport function textAlignInwards(ctx, radians){\r\n  if(Quadrant.isInRightQuadrants(radians)){\r\n    ctx.textAlign = \"end\";\r\n  }\r\n  if(Quadrant.isInLeftQuadrants(radians)){\r\n    ctx.textAlign = \"start\";\r\n  }\r\n  if(Quadrant.isInTopQuadrants(radians)){\r\n    ctx.textBaseline = \"top\";\r\n  }\r\n  if(Quadrant.isInBottomQuadrants(radians)){\r\n    ctx.textBaseline = \"bottom\";\r\n  }\r\n}\r\n\r\nexport function textAlignTopBottomInwards(ctx, radians){\r\n  ctx.textAlign = \"center\";\r\n  if(Quadrant.isInTopQuadrants(radians)){\r\n    ctx.textBaseline = \"top\";\r\n  }\r\n  if(Quadrant.isInBottomQuadrants(radians)){\r\n    ctx.textBaseline = \"bottom\";\r\n  }\r\n}\r\n\r\nexport function textAlignRightLeftInwards(ctx, radians){\r\n  ctx.textBaseline = \"middle\";\r\n  if(Quadrant.isInRightQuadrants(radians)){\r\n    ctx.textAlign = \"end\";\r\n  }\r\n  if(Quadrant.isInLeftQuadrants(radians)){\r\n    ctx.textAlign = \"start\";\r\n  }\r\n}\r\n","import * as Colour from \"../utils/colourHelpers.js\";\r\nimport * as DateTime from \"../utils/datetimeHelpers.js\";\r\nimport * as Text from \"../utils/textHelpers.js\";\r\n\r\nexport default class Draw {\r\n  constructor(ctx) {\r\n    this.ctx = ctx;\r\n    this.centreX = window.innerWidth/2;\r\n    this.centreY = window.innerHeight/2;\r\n    this.radius = Math.floor(window.innerHeight/3);\r\n    this.startRadians = (Math.PI / 2);\r\n  }\r\n\r\n  clear(){\r\n    this.ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n  }\r\n\r\n  drawDate(date){\r\n    let dateString = date.day + \"/\" + date.month + \"/\" + date.year;\r\n    if(date.compDisabled != true)\r\n      dateString += \" - \" + date.compDay + \"/\" + date.compMonth + \"/\" + date.year;\r\n\r\n    Text.textAlignCentered(this.ctx);\r\n    this.ctx.font = \"60px Consolas\";\r\n    this.ctx.fillStyle = Colour.white;\r\n    this.ctx.fillText(dateString, this.centreX, this.centreY - this.radius - 70);\r\n  }\r\n\r\n  drawBaseCircle(){\r\n    this.ctx.fillStyle = Colour.white;\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(this.centreX, this.centreY, this.radius, 0, 2 * Math.PI);\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n  }\r\n\r\n  drawAstroSeasonSections(date){\r\n    const equinoxSolsticeDates = DateTime.getEquinoxSolsticeDates(date.year);\r\n    const daysInYear = DateTime.getDaysInYear(date.year);\r\n\r\n    const startDate = equinoxSolsticeDates[equinoxSolsticeDates.length-1];\r\n    let dayOfYear = DateTime.getDayOfYear(startDate.getDate(), startDate.getMonth()+1, startDate.getFullYear());\r\n    let previousRadians = - this.startRadians + ((dayOfYear) * ((2 * Math.PI) / daysInYear));\r\n\r\n    this.ctx.lineWidth = 2;\r\n    this.ctx.strokeStyle = Colour.grey;\r\n    this.ctx.font = \"20px Consolas\";\r\n    this.ctx.fillStyle = Colour.white;\r\n    const textOffset = 5;\r\n    const dateMeanings = [\"Spring Equinox\", \"Summer Solstice\", \"Autumn Equinox\", \"Winter Solstice\"];\r\n\r\n    for(let i=0; i<equinoxSolsticeDates.length; i+=1) {\r\n      const date = equinoxSolsticeDates[i];\r\n      dayOfYear = DateTime.getDayOfYear(date.getDate(), date.getMonth()+1, date.getFullYear());\r\n      let dateRadians = - this.startRadians + ((dayOfYear) * ((2 * Math.PI) / daysInYear));\r\n\r\n      this.ctx.fillStyle = Colour.seasonColours[i];\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.centreX, this.centreY);\r\n      this.ctx.arc(this.centreX, this.centreY, this.radius, previousRadians, dateRadians, false);\r\n      this.ctx.lineTo(this.centreX, this.centreY);\r\n      this.ctx.closePath();\r\n      this.ctx.fill();\r\n      this.ctx.stroke();\r\n\r\n      previousRadians = dateRadians;\r\n\r\n      this.ctx.fillStyle = Colour.grey;\r\n      dateRadians = this.startRadians - ((dayOfYear) * ((2 * Math.PI) / daysInYear));\r\n      Text.textAlignOutwards(this.ctx, dateRadians);\r\n      const lineEndX = this.centreX + (this.radius + textOffset) * Math.cos(dateRadians);\r\n      const lineEndY = this.centreY - (this.radius + textOffset) * Math.sin(dateRadians);\r\n      this.ctx.fillText(dateMeanings[i] + \": \" + date.getDate() + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear(), lineEndX, lineEndY);\r\n    }\r\n  }\r\n\r\n  drawMeteoSeasonSections(date){\r\n    let radians = - Math.PI / 2;\r\n    this.ctx.font = \"20px Consolas\";\r\n    this.ctx.strokeStyle = Colour.black;\r\n    Text.textAlignCentered(this.ctx);\r\n    const textOffset = this.radius / 3;\r\n    for(let i=1; i<13; i+=1) {\r\n      const daysInMonth = new Date(date.year, i, 0).getDate();\r\n      const stepSize = ((2 * Math.PI) / DateTime.getDaysInYear(date.year)) * daysInMonth;\r\n\r\n      this.ctx.fillStyle = Colour.monthColours[i-1];\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.centreX, this.centreY);\r\n      this.ctx.arc(this.centreX, this.centreY, this.radius, radians, radians + stepSize, false);\r\n      this.ctx.lineTo(this.centreX, this.centreY);\r\n      this.ctx.closePath();\r\n      this.ctx.fill();\r\n\r\n      radians += stepSize;\r\n    }\r\n  }\r\n\r\n  drawWhiteCircle(){\r\n    this.ctx.fillStyle = Colour.lightGrey;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.centreX, this.centreY);\r\n    this.ctx.arc(this.centreX, this.centreY, this.radius, 0, 2 * Math.PI, false);\r\n    this.ctx.lineTo(this.centreX, this.centreY);\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n  }\r\n\r\n  drawMonthSections(date){\r\n    let radians = - Math.PI / 2;\r\n    this.ctx.font = \"20px Consolas\";\r\n    this.ctx.strokeStyle = Colour.black;\r\n    Text.textAlignCentered(this.ctx);\r\n    const textOffset = this.radius / 3;\r\n    for(let i=1; i<13; i+=1) {\r\n      const daysInMonth = new Date(date.year, i, 0).getDate();\r\n      const stepSize = ((2 * Math.PI) / DateTime.getDaysInYear(date.year)) * daysInMonth;\r\n\r\n      // this.ctx.fillStyle = Colour.monthColours[i-1];\r\n      // this.ctx.fillStyle = Colour.white;\r\n      this.ctx.lineWidth = 3;\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.centreX, this.centreY);\r\n      this.ctx.arc(this.centreX, this.centreY, this.radius, radians, radians + stepSize, false);\r\n      this.ctx.lineTo(this.centreX, this.centreY);\r\n      this.ctx.closePath();\r\n      this.ctx.stroke();\r\n      // this.ctx.fill();\r\n\r\n      this.ctx.fillStyle = Colour.black;\r\n\r\n      const centreRadians = radians + stepSize / 2;\r\n      const textX = this.centreX + (this.radius - textOffset) * Math.cos(centreRadians);\r\n      const textY = this.centreY + (this.radius - textOffset) * Math.sin(centreRadians);\r\n      this.ctx.fillText(DateTime.monthNames[i-1], textX, textY);\r\n\r\n      radians += stepSize;\r\n    }\r\n  }\r\n\r\n  drawDayLines(date){\r\n    this.ctx.strokeStyle = Colour.black;\r\n    this.ctx.lineWidth = 1;\r\n\r\n    const daysInYear = DateTime.getDaysInYear(date.year);\r\n    const dayStep = (2 * Math.PI) / daysInYear;\r\n    for(let i=0; i<daysInYear; i+=1) {\r\n      const radians = this.startRadians - (i * dayStep);\r\n      const dayLineLen = this.radius / 20;\r\n      const lineStartX = this.centreX + (this.radius - dayLineLen) * Math.cos(radians);\r\n      const lineStartY = this.centreY - (this.radius - dayLineLen) * Math.sin(radians);\r\n      const lineEndX = this.centreX + this.radius * Math.cos(radians);\r\n      const lineEndY = this.centreY - this.radius * Math.sin(radians);\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(lineStartX, lineStartY);\r\n      this.ctx.lineTo(lineEndX, lineEndY);\r\n      this.ctx.stroke();\r\n    }\r\n  }\r\n\r\n  drawDateLine(date){\r\n    const daysInYear = DateTime.getDaysInYear(date.year);\r\n    const dayOfYear = DateTime.getDayOfYear(date.day, date.month, date.year);\r\n    const relativeDayOfYear = Math.ceil((dayOfYear / 100) * (this.ctx.globalAlpha * 100));\r\n    const dateRadians = this.startRadians - ((relativeDayOfYear) * ((2 * Math.PI) / daysInYear));\r\n    const lineEndX = this.centreX + this.radius * Math.cos(dateRadians);\r\n    const lineEndY = this.centreY - this.radius * Math.sin(dateRadians);\r\n\r\n    this.ctx.lineWidth = 3;\r\n    this.ctx.strokeStyle = Colour.white;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.centreX, this.centreY);\r\n    this.ctx.lineTo(lineEndX, lineEndY);\r\n    this.ctx.stroke();\r\n\r\n    Text.textAlignOutwards(this.ctx, dateRadians);\r\n    this.ctx.font = \"30px Consolas\";\r\n    this.ctx.fillStyle = Colour.white;\r\n    const yearPercentage = Math.round(((100 / daysInYear) * relativeDayOfYear) * 100) / 100;\r\n    this.ctx.fillText(yearPercentage + \"%\", lineEndX, lineEndY);\r\n\r\n    if(date.compDisabled != true){\r\n      const compDayOfYear = DateTime.getDayOfYear(date.compDay, date.compMonth, date.year);\r\n      const relativeCompDayOfYear = Math.ceil((compDayOfYear / 100) * (this.ctx.globalAlpha * 100));\r\n      const compDateRadians = this.startRadians - ((relativeCompDayOfYear) * ((2 * Math.PI) / daysInYear));\r\n      const lineEndX = this.centreX + this.radius * Math.cos(compDateRadians);\r\n      const lineEndY = this.centreY - this.radius * Math.sin(compDateRadians);\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.centreX, this.centreY);\r\n      this.ctx.lineTo(lineEndX, lineEndY);\r\n      this.ctx.stroke();\r\n\r\n      Text.textAlignOutwards(this.ctx, compDateRadians);\r\n      const compYearPercentage = Math.round(((100 / daysInYear) * relativeCompDayOfYear) * 100) / 100;\r\n      this.ctx.fillText(compYearPercentage + \"%\", lineEndX, lineEndY);\r\n\r\n      this.ctx.fillStyle = Colour.transparentBlack;\r\n      this.ctx.strokeStyle = Colour.white;\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.centreX, this.centreY);\r\n      this.ctx.arc(this.centreX, this.centreY, this.radius, - dateRadians, - compDateRadians, false);\r\n      this.ctx.lineTo(this.centreX, this.centreY);\r\n      this.ctx.closePath();\r\n      this.ctx.stroke();\r\n      this.ctx.fill();\r\n\r\n      Text.textAlignCentered(this.ctx);\r\n      this.ctx.font = \"30px Consolas\";\r\n      this.ctx.fillStyle = Colour.white;\r\n      const textOffset = this.radius / 3;\r\n      const centreRadians = dateRadians + (compDateRadians - dateRadians) / 2;\r\n      const textX = this.centreX + (this.radius - textOffset) * Math.cos(centreRadians);\r\n      const textY = this.centreY - (this.radius - textOffset) * Math.sin(centreRadians);\r\n      this.ctx.fillText(Math.round((compYearPercentage - yearPercentage) * 10) / 10 + \"%\", textX, textY);\r\n    }\r\n  }\r\n\r\n  drawComparisonAnalysis(date){\r\n    if(date.compDisabled != true){\r\n      const dayOfYear = DateTime.getDayOfYear(date.day, date.month, date.year);\r\n      const relativeDayOfYear = Math.ceil((dayOfYear / 100) * (this.ctx.globalAlpha * 100));\r\n      const compDayOfYear = DateTime.getDayOfYear(date.compDay, date.compMonth, date.year);\r\n      const relativeCompDayOfYear = Math.ceil((compDayOfYear / 100) * (this.ctx.globalAlpha * 100));\r\n      const totalDays = relativeCompDayOfYear - relativeDayOfYear + \" Days\";\r\n      const totalWeeks = Math.round((relativeCompDayOfYear - relativeDayOfYear)/7 * 10) / 10 + \" Weeks\";\r\n      const totalMonths = Math.round((relativeCompDayOfYear - relativeDayOfYear)/30* 100) / 100 + \" Months\";\r\n\r\n      Text.textAlignCentered(this.ctx);\r\n      this.ctx.font = \"30px Consolas\";\r\n      this.ctx.fillStyle = Colour.white;\r\n      this.ctx.fillText(totalDays,this.centreX, this.centreY + this.radius + 50);\r\n      this.ctx.fillText(totalWeeks, this.centreX, this.centreY + this.radius + 50 + 40);\r\n      this.ctx.fillText(totalMonths, this.centreX, this.centreY + this.radius + 50 + 80);\r\n    }\r\n  }\r\n}\r\n\r\n// Old code to draw gradients between month arcs\r\n// const arcStartX = this.centreX + this.radius/2 * Math.cos(radians);\r\n// const arcStartY = this.centreY + this.radius/2 * Math.sin(radians);\r\n// const arcEndX = this.centreX + this.radius/2 * Math.cos(radians + stepSize);\r\n// const arcEndY = this.centreY + this.radius/2 * Math.sin(radians + stepSize);\r\n// const gradient = this.ctx.createLinearGradient(arcStartX, arcStartY, arcEndX, arcEndY);\r\n// console.log(i-1);\r\n// console.log(monthColours[i-2] + \" : \" + monthColours[i-1] + \" : \" + monthColours[i]);\r\n// if (monthColours[i] !== undefined && monthColours[i-1] !== monthColours[i]) {\r\n//   gradient.addColorStop(0, monthColours[i-1]);\r\n//   gradient.addColorStop(0.75, monthColours[i-1]);\r\n//   gradient.addColorStop(1, transparent);\r\n//   this.ctx.fillStyle = gradient;\r\n// }\r\n// else if(monthColours[i-2] !== undefined && monthColours[i-2] !== monthColours[i-1]){\r\n//   gradient.addColorStop(0, transparent);\r\n//   gradient.addColorStop(0.75, monthColours[i-1]);\r\n//   gradient.addColorStop(1, monthColours[i-1]);\r\n//   this.ctx.fillStyle = gradient;\r\n// }\r\n\r\n// Can't remember what this was for\r\n// const piStep = Math.PI / (100 * this.ctx.globalAlpha);\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nimport Drawer from \"./rendering/Drawer.js\";\r\n\r\nimport \"./Canvas.css\";\r\n\r\nfunction Canvas(props) {\r\n  const canvas = useRef(null);\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n\r\n  async function fadeIn(ctx, drawer){\r\n    const timer = ms => new Promise(res => setTimeout(res, ms));\r\n    let alpha = 0.0;\r\n    let delta = 0.01;\r\n\r\n    while(alpha <= 1.0){\r\n      ctx.globalAlpha = alpha;\r\n      resetCanvas(ctx, drawer);\r\n      alpha += delta;\r\n      alpha = Math.round(alpha * 1000) / 1000;\r\n      await timer(10);\r\n    }\r\n    resetCanvas(ctx, drawer);\r\n  }\r\n\r\n  function resetCanvas(ctx, drawer){\r\n    drawer.clear();\r\n    drawer.drawDate(props.date);\r\n    if(props.seasons == \"astronomical\")\r\n      drawer.drawAstroSeasonSections(props.date);\r\n    if(props.seasons == \"meteorological\")\r\n      drawer.drawMeteoSeasonSections(props.date);\r\n    if(props.seasons == \"none\")\r\n      drawer.drawWhiteCircle();\r\n    drawer.drawMonthSections(props.date);\r\n    drawer.drawDayLines(props.date);\r\n    drawer.drawDateLine(props.date);\r\n    drawer.drawComparisonAnalysis(props.date);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.scriptsLoaded == true){\r\n      const ctx = canvas.current.getContext(\"2d\");\r\n      const drawer = new Drawer(ctx);\r\n      ctx.globalAlpha = 0;\r\n      fadeIn(ctx, drawer);\r\n    }\r\n  }, [props.scriptsLoaded, props.updateCount]);\r\n\r\n  return (\r\n    <canvas ref={canvas} width={width} height={height} className=\"Canvas\">\r\n      <p>Your browser doesn\"t support canvas.</p>\r\n    </canvas>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./Settings.css\";\r\n\r\nfunction Settings(props) {\r\n  const [showing, setShowing] = useState(false);\r\n\r\n  const handleButtonClick = (event) => {\r\n    setShowing(!showing);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"button openButton\" style={{bottom:60, left: 60}} onClick={handleButtonClick}>&#9998;</button>\r\n      <div className=\"settingsMenu\" style={{width: showing ? \"500px\" : \"0\"}}>\r\n        <button className=\"button closeButton\" onClick={handleButtonClick}>&times;</button>\r\n\r\n        <label className=\"heading\">\r\n         Date\r\n        </label>\r\n        <label className=\"dateField\">\r\n          <input id=\"day\" type=\"number\" className=\"dayInput\" value={props.date.day} onChange={props.handleDateChange}/>\r\n          /\r\n          <input id=\"month\" type=\"number\" className=\"monthInput\" value={props.date.month} onChange={props.handleDateChange}/>\r\n          /\r\n          <input id=\"year\" type=\"number\" className=\"yearInput\" value={props.date.year} onChange={props.handleDateChange}/>\r\n        </label>\r\n\r\n        <hr/>\r\n\r\n        <label className=\"heading\">\r\n         Comparative Date\r\n         <input id=\"compDisabled\" type=\"checkbox\" className=\"checkboxInput\" checked={!props.date.compDisabled} onChange={props.handleDateChange}/>\r\n        </label>\r\n        <label className=\"dateField\">\r\n          <input id=\"compDay\" type=\"number\" className=\"dayInput\" disabled={props.date.compDisabled} value={props.date.compDay} onChange={props.handleDateChange}/>\r\n          /\r\n          <input id=\"compMonth\" type=\"number\" className=\"monthInput\" disabled={props.date.compDisabled} value={props.date.compMonth} onChange={props.handleDateChange}/>\r\n          /\r\n          {props.date.year}\r\n        </label>\r\n\r\n        <hr/>\r\n\r\n        <label className=\"heading\">\r\n         Seasons\r\n         <span className=\"variableDropdown\">\r\n           <select id=\"seasons\" value=\"default\" value={props.season} onChange={props.handleSeasonsChange}>\r\n             <option value=\"astronomical\">Astronomical</option>\r\n             <option value=\"meteorological\">Meteorological</option>\r\n             <option value=\"none\">None</option>\r\n           </select>\r\n         </span>\r\n        </label>\r\n\r\n        <hr/>\r\n        <div className=\"separator\" />\r\n\r\n        <button className=\"save\" onClick={props.handleSave}>Save</button>\r\n\r\n        <div id=\"credits\" style={{position: \"absolute\", right: 10, top: window.innerHeight-30}}>\r\n          <a href=\"https://github.com/conwayjw97\">github.com/conwayjw97/</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","// Data Ideas: Seasons, Temperature, Daylight\n\nimport React, { useReducer, useState, useEffect } from 'react';\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Canvas from './components/canvas/Canvas.js';\nimport Settings from './components/settings/Settings.js';\nimport './App.css';\n\nconst date = new Date();\nconst initialDate = {\n  day: date.getDate(),\n  month: date.getMonth()+1,\n  year: date.getFullYear(),\n  compDisabled: true,\n  compDay: date.getDate(),\n  compMonth: date.getMonth()+1\n};\n\nfunction dateReducer(state, action) {\n  const elementId = action.nativeEvent.srcElement.id;\n  const newValue = parseInt(action.target.value);\n  \n  switch (elementId) {\n    case 'day':\n      if(newValue > 0 && newValue < 32){\n        if(state.compMonth == state.month && state.compDay < newValue){\n          return {...state, day: newValue, compDay: newValue};\n        } else {\n          return {...state, day: newValue};\n        }\n      } else {\n        return {...state};\n      }\n    case 'month':\n      if(newValue > 0 && newValue < 13){\n        if(state.compMonth < newValue || (state.compMonth == newValue && state.day > state.compDay)){\n          return {...state, month: newValue, compMonth: newValue};\n        } else {\n          return {...state, month: newValue};\n        }\n      } else {\n        return {...state};\n      }\n    case 'year':\n      if(newValue > 0){\n        return {...state, year: newValue};\n      } else {\n        return {...state};\n      }\n    case 'compDisabled':\n      return {...state, compDisabled: !action.target.checked};\n    case 'compDay':\n      if(newValue > 0 && newValue < 32 && (state.compMonth > state.month || (state.compMonth == state.month && newValue > state.day))){\n        return {...state, compDay: newValue};\n      } else {\n        return {...state};\n      }\n    case 'compMonth':\n      if(newValue > 0 && newValue < 13 && (newValue > state.month || (newValue == state.month && state.compDay > state.day))){\n        return {...state, compMonth: newValue};\n      } else {\n        return {...state};\n      }\n  }\n}\n\nfunction App() {\n  const height = window.innerHeight;\n\n  const [dateState, dateDispatch] = useReducer(dateReducer, initialDate);\n  const [seasonsState, setSeasonsState] = useState(\"astronomical\");\n  const [updateCount, setUpdateCount] = useState(0);\n  const [scriptsLoaded, setScriptsLoaded] = useState(false);\n\n  const handleSave = () => {\n    setUpdateCount(updateCount+1);\n  }\n\n  const handleSeasonsChange = (event) => {\n    console.log(seasonsState);\n    setSeasonsState(event.target.value);\n  }\n\n  async function waitForScripts(){\n    const timer = ms => new Promise(res => setTimeout(res, ms));\n\n    while(typeof window.eqsol != \"function\"){\n      await timer(10);\n    }\n\n    setScriptsLoaded(true);\n  }\n\n  useEffect(() => {\n    waitForScripts();\n  }, []);\n\n  return (\n    <HelmetProvider>\n      <div style={{'height':height}} className='App'>\n        <Helmet>\n          <script src={process.env.PUBLIC_URL + \"/lib/astrojs.js\"} type=\"text/javascript\" />\n        </Helmet>\n        <Canvas date={dateState} seasons={seasonsState} updateCount={updateCount} scriptsLoaded={scriptsLoaded}/>\n        <Settings date={dateState} handleDateChange={dateDispatch} seasons={seasonsState} handleSeasonsChange={handleSeasonsChange} handleSave={handleSave}/>\n      </div>\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}